services:
  # Database service
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d myapp"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - default_network

  # pgAdmin service
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - default_network

  # Airflow Webserver
  airflow-webserver:
    image: apache/airflow:2.5.1
    restart: always
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    command: "webserver"
    depends_on:
      - airflow-scheduler
    networks:
      - default_network

  # Airflow Scheduler
  airflow-scheduler:
    image: apache/airflow:2.5.1
    restart: always
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    command: "scheduler"
    depends_on:
      - airflow-init
    networks:
      - default_network

  # Airflow Database Initialization
  airflow-init:
    image: apache/airflow:2.5.1
    restart: on-failure
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    command: "bash -c 'airflow db init && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com'"
    networks:
      - default_network

volumes:
  postgres_data:
  pgadmin_data:
  airflow_logs:

networks:
  default_network:
    driver: bridge